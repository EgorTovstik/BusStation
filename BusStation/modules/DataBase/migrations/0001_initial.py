# Generated by Django 5.0.6 on 2024-06-05 16:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Buses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bus_id', models.IntegerField(unique=True, verbose_name='автобус id')),
                ('model', models.CharField(max_length=100, verbose_name='модель')),
                ('capacity', models.IntegerField(verbose_name='вместимость')),
                ('bus_number', models.CharField(max_length=10, verbose_name='гос. номер')),
            ],
            options={
                'verbose_name': 'Автобус',
                'verbose_name_plural': 'Автобусы',
            },
        ),
        migrations.CreateModel(
            name='Carrier_organizations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_id', models.IntegerField(unique=True, verbose_name='организация id')),
                ('organization_name', models.CharField(max_length=100, verbose_name='название организации')),
                ('organization_license', models.CharField(max_length=100, verbose_name='лицензия перевозчика')),
            ],
            options={
                'verbose_name': 'Организация перевозчик',
                'verbose_name_plural': 'Организации перевозчики',
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_id', models.IntegerField(unique=True, verbose_name='город id')),
                ('name', models.CharField(max_length=50, verbose_name='название')),
                ('type', models.CharField(max_length=100, verbose_name='тип')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Countrys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_id', models.IntegerField(unique=True, verbose_name='страна id')),
                ('country_name', models.CharField(max_length=50, verbose_name='название страны')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
            },
        ),
        migrations.CreateModel(
            name='Cruise_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cruise_id', models.IntegerField(unique=True, verbose_name='тип id')),
                ('cruise_type', models.CharField(max_length=50, verbose_name='тип рейса')),
            ],
            options={
                'verbose_name': 'Тип рейса',
            },
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_id', models.IntegerField(unique=True, verbose_name='документ id')),
                ('document_type', models.CharField(max_length=50, verbose_name='тип документа')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
        migrations.CreateModel(
            name='Drivers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_id', models.IntegerField(unique=True, verbose_name='водитель id')),
                ('name', models.CharField(max_length=50, verbose_name='имя')),
                ('surname', models.CharField(max_length=50, verbose_name='фамилия')),
                ('patronymic', models.CharField(max_length=50, null=True, verbose_name='отчество')),
                ('license_number', models.CharField(max_length=50, verbose_name='номер лицензии')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Номер телефона')),
            ],
            options={
                'verbose_name': 'Водитель',
                'verbose_name_plural': 'Водители',
            },
        ),
        migrations.CreateModel(
            name='Employes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employe_id', models.IntegerField(unique=True, verbose_name='сотрудник id')),
                ('name', models.CharField(max_length=50, verbose_name='имя')),
                ('surname', models.CharField(max_length=50, verbose_name='фамилия')),
                ('patronymic', models.CharField(max_length=50, null=True, verbose_name='отчество')),
                ('password', models.CharField(max_length=250, verbose_name='пароль')),
                ('Email', models.CharField(max_length=100, verbose_name='электронная почта')),
                ('post', models.CharField(max_length=50, verbose_name='должность')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='Registration_method',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method_id', models.IntegerField(unique=True, verbose_name='способ id')),
                ('description', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Способ оформления',
            },
        ),
        migrations.CreateModel(
            name='Carrier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carrier_id', models.IntegerField(unique=True, verbose_name='перевозчик id')),
                ('bus_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.buses', verbose_name='автобус id')),
                ('organization_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.carrier_organizations', verbose_name='организация id')),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.drivers', verbose_name='Водитель id')),
            ],
            options={
                'verbose_name': 'Перевозчик',
            },
        ),
        migrations.CreateModel(
            name='Cruises',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cruise_id', models.IntegerField(unique=True, verbose_name='рейс id')),
                ('destination_city', models.CharField(max_length=100, verbose_name='город отправления')),
                ('city_arrival', models.CharField(max_length=100, verbose_name='город прибытия')),
                ('dispatch_time', models.DateTimeField(verbose_name='время отправления')),
                ('arrival_time', models.DateTimeField(verbose_name='время прибытия')),
                ('total_distance', models.IntegerField(verbose_name='общее расстояние')),
                ('organization_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.carrier', verbose_name='код перевозчика')),
            ],
            options={
                'verbose_name': 'Рейс',
                'verbose_name_plural': 'Рейсы',
            },
        ),
        migrations.CreateModel(
            name='Districts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district_id', models.IntegerField(verbose_name='район id')),
                ('name', models.CharField(max_length=100, verbose_name='название района')),
                ('city_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.cities', verbose_name='город id')),
            ],
            options={
                'verbose_name': 'Район',
                'verbose_name_plural': 'Районы',
            },
        ),
        migrations.CreateModel(
            name='Discounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_id', models.IntegerField(unique=True, verbose_name='скидки id')),
                ('description', models.TextField(max_length=500, verbose_name='описание')),
                ('discount_percent', models.IntegerField()),
                ('start_date', models.DateTimeField(null=True, verbose_name='действует с')),
                ('end_date', models.DateTimeField(null=True, verbose_name='действует до')),
                ('document_confirming', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.documents', verbose_name='документ подтверждающий скидку')),
            ],
            options={
                'verbose_name': 'Скидка',
                'verbose_name_plural': 'Скидки',
            },
        ),
        migrations.CreateModel(
            name='Passengers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passenger_id', models.IntegerField(unique=True, verbose_name='пассажир id')),
                ('name', models.CharField(max_length=50, verbose_name='имя')),
                ('surname', models.CharField(max_length=50, verbose_name='фамилия')),
                ('patronymic', models.CharField(max_length=50, null=True, verbose_name='отчество')),
                ('gender', models.CharField(max_length=1, verbose_name='пол')),
                ('birth_date', models.DateField(verbose_name='дата рождения')),
                ('document_number', models.CharField(max_length=10, verbose_name='номер документа')),
                ('citizenship', models.CharField(max_length=50, verbose_name='гражданство')),
                ('phone_number', models.CharField(max_length=15, verbose_name='номер телефона')),
                ('Email', models.CharField(max_length=100, null=True, verbose_name='электронная почта')),
                ('document_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.documents', verbose_name='id документа')),
            ],
            options={
                'verbose_name': 'Пассажир',
                'verbose_name_plural': 'Пассажиры',
            },
        ),
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_id', models.IntegerField(verbose_name='регион id')),
                ('region_name', models.CharField(max_length=100, verbose_name='название региона')),
                ('country_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.countrys', verbose_name='страна id')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
            },
        ),
        migrations.AddField(
            model_name='cities',
            name='region_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.regions', verbose_name='регион id'),
        ),
        migrations.CreateModel(
            name='Stations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.IntegerField(unique=True, verbose_name='станция id')),
                ('station_name', models.CharField(max_length=100, verbose_name='название станции')),
                ('address', models.CharField(max_length=255, verbose_name='адрес')),
                ('city_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.cities', verbose_name='город id')),
                ('district_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.districts', verbose_name='город id')),
            ],
            options={
                'verbose_name': 'Станция',
                'verbose_name_plural': 'Станции',
            },
        ),
        migrations.CreateModel(
            name='Cruise_route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cruise_route_id', models.IntegerField(unique=True, verbose_name='маршрут id')),
                ('station_number', models.IntegerField()),
                ('dispatch_time', models.DateTimeField(verbose_name='время отправления')),
                ('arrival_time', models.DateTimeField(verbose_name='время прибытия')),
                ('distance', models.IntegerField()),
                ('cruise_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.cruises', verbose_name='рейс id')),
                ('station_arrival', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_arrival', to='DataBase.stations', verbose_name='станция прибытия')),
                ('station_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_destination', to='DataBase.stations', verbose_name='станция отправления')),
            ],
            options={
                'verbose_name': 'Маршрут рейса',
                'verbose_name_plural': 'Маршруты рейсов',
            },
        ),
        migrations.CreateModel(
            name='Tariffs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tariff_id', models.IntegerField(unique=True, verbose_name='тариф id')),
                ('price_per_km', models.DecimalField(decimal_places=2, max_digits=10)),
                ('organization_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.carrier', verbose_name='код перевозчика')),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.IntegerField(unique=True, verbose_name='билет id')),
                ('document_number', models.CharField(max_length=10, verbose_name='номер документа')),
                ('order_date', models.DateTimeField(verbose_name='дата заказа')),
                ('place_number', models.IntegerField(verbose_name='номер места')),
                ('baggage', models.IntegerField(verbose_name='багаж')),
                ('cruise_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.cruises', verbose_name='рейс id')),
                ('discount_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='DataBase.discounts', verbose_name='скидка id')),
                ('employe_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.employes', verbose_name='сотрудник id')),
                ('passenger_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.passengers', verbose_name='пассажир id')),
                ('registration_method_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.registration_method', verbose_name='способ оформления id')),
            ],
            options={
                'verbose_name': 'Билет',
                'verbose_name_plural': 'Билеты',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.IntegerField(unique=True, verbose_name='оплата id')),
                ('payment_date', models.DateTimeField(verbose_name='дата платежа')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='стоимость')),
                ('payment_method', models.CharField(max_length=50)),
                ('ticket_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.tickets', verbose_name='билет id')),
            ],
            options={
                'verbose_name': 'Оплата',
            },
        ),
        migrations.CreateModel(
            name='Activity_logs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_id', models.IntegerField(unique=True, verbose_name='логи id')),
                ('date_time', models.DateTimeField()),
                ('employe_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.employes', verbose_name='сотрудник id')),
                ('added_ticket_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DataBase.tickets', verbose_name='добавленный билет')),
            ],
            options={
                'verbose_name': 'Логи активности',
            },
        ),
    ]
